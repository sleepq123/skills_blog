(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{218:function(n,t,e){"use strict";e.r(t);var s=e(0),a=Object(s.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("ul",[e("li",[n._v("1.js有几种语言类型")])]),n._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[n._v("7")]),n._v("种。 \n基本类型"),e("span",{pre:!0,attrs:{class:"token number"}},[n._v("6")]),n._v("种"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" Number"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" Boolean"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" Null"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" Undefind"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" Symbol\n引用类型"),e("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("种"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" Object\n")])])]),e("ul",[e("li",[n._v("2.Symbol的实际运用场景")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("/** 首先Symbol的特性是唯一值的变量,因此可以创建枚举类型,可以避免名称冲突 **/\nconst directions = {\n    UP   : Symbol( 'UP' ),\n    DOWN : Symbol( 'DOWN' ),\n    LEFT : Symbol( 'LEFT' ),\n    RIGHT: Symbol( 'RIGHT' )\n};\n")])])]),e("p",[e("strong",[n._v("注意：以symbol作为的属性名,不会被遍历出来。需要"),e("code",[n._v("Reflect.ownKeys")]),n._v("或"),e("code",[n._v("Object.getOwnPropertySymbols")]),n._v("遍历")])]),n._v(" "),e("ul",[e("li",[n._v("3.值类型和引用类型的理解")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("- 值类型\n存放于内存的栈中\n从一个变量向另一个变量赋值的时候，直接将值分配到新变量的位置\n\n- 引用类型\n存放于栈对应指向堆的地方\n从一个变量向另一个变量赋值的时候，只是将在栈中指向堆的地址分配给新变量，指向的对地址不变。\n")])])]),e("ul",[e("li",[n._v("4.undefind与null的区别")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('- null表示"没有对象"，即该处不应该有值。\n\n（1） 作为函数的参数，表示该函数的参数不是对象。\n（2） 作为对象原型链的终点。\n\n\n- undefined表示"缺少值"，就是此处应该有一个值，但是还没有定义。\n\n（1）变量被声明了，但没有赋值时，就等于undefined。\n（2) 调用函数时，应该提供的参数没有提供，该参数等于undefined。\n（3）对象没有赋值的属性，该属性的值为undefined。\n（4）函数没有返回值时，默认返回undefined。\n')])])]),e("p",[n._v("引自"),e("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2014/03/undefined-vs-null.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("阮一峰的网络日志"),e("OutboundLink")],1)]),n._v(" "),e("ul",[e("li",[n._v("5.JavaScript数据类型的方式")])]),n._v(" "),e("blockquote",[e("p",[n._v("typeof")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("示例：\nconsole.log(type('this.string'));\n> string\n\n优点：\n对基本类型可以做出准确的判断\n\n缺点：\n对引用类型都统一指向object\n\n注意点： \n特殊情况 typeof(null) -> null\n")])])]),e("blockquote",[e("p",[n._v("instanceof")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("示例：\nconsole.log('this.string' instanceof String);\nconsole.log(new String('this is string') instanceof String)\n> false\n> true\n\n优点：\n判断对象和构造函数在原型链上是否有关系，如果有关系，返回真，否则返回假\n\n缺点：\n无法对基础类型进行判断\n")])])]),e("blockquote",[e("p",[n._v("constructor")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("示例：\n'this.string'.constructor == String\n> true\n\n优点：\n基本能检测所有的类型（除了null和undefined）\t\n\n缺点：\n(1)undefined和null是不能够判断出类型的，并且会报错\n(2)使用constructor是不保险的，因为constructor属性是可以被修改的\n")])])]),e("blockquote",[e("p",[n._v("Object.propertype.toString.call()")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("示例：\nObject.prototype.toString.call('this is str')\n> [object String]\n\n优点：\n检测出所有的类型\n\n缺点：\nIE6下，undefined和null均为Object\n")])])]),e("ul",[e("li",[n._v("6.隐式类型转换的场景以及转换原则")])]),n._v(" "),e("blockquote",[e("p",[n._v("参考"),e("a",{attrs:{href:"https://juejin.im/post/5cda9178f265da0379419ad1",target:"_blank",rel:"noopener noreferrer"}},[n._v("掘金"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=a.exports}}]);